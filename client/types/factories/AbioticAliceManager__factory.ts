/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AbioticAliceManager,
  AbioticAliceManagerInterface,
} from "../AbioticAliceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPolicyManager",
        name: "_policyManager",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_verifyingKey",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "policyId",
        type: "bytes16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ursula",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "kfrag",
        type: "bytes",
      },
    ],
    name: "KfragsCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requestor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "PolicyRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "verifyingKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "decryptingKey",
        type: "bytes",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_policyId",
        type: "bytes16",
      },
      {
        internalType: "uint64",
        name: "_endTimestamp",
        type: "uint64",
      },
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_kfrags",
        type: "bytes[]",
      },
    ],
    name: "createPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_bobDecryptingKey",
        type: "bytes",
      },
    ],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registry",
    outputs: [
      {
        internalType: "bytes",
        name: "bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "bobDecryptingKey",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_label",
        type: "string",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "requestPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "policyOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019b7380380620019b78339818101604052810190620000379190620001d1565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600190805190602001906200008f92919062000098565b505050620003fd565b828054620000a69062000308565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000254565b6200022b565b9050828152602081018484840111156200017857600080fd5b62000185848285620002d2565b509392505050565b600082601f8301126200019f57600080fd5b8151620001b184826020860162000148565b91505092915050565b600081519050620001cb81620003e3565b92915050565b60008060408385031215620001e557600080fd5b6000620001f585828601620001ba565b925050602083015167ffffffffffffffff8111156200021357600080fd5b62000221858286016200018d565b9150509250929050565b6000620002376200024a565b90506200024582826200033e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002725762000271620003a3565b5b6200027d82620003d2565b9050602081019050919050565b60006200029782620002b2565b9050919050565b6000620002ab826200028a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002f2578082015181840152602081019050620002d5565b8381111562000302576000848401525b50505050565b600060028204905060018216806200032157607f821691505b6020821081141562000338576200033762000374565b5b50919050565b6200034982620003d2565b810181811067ffffffffffffffff821117156200036b576200036a620003a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ee816200029e565b8114620003fa57600080fd5b50565b6115aa806200040d6000396000f3fe6080604052600436106100555760003560e01c8063038defd71461005a5780631a8370dd1461009857806354b50895146100d8578063574267fa146100f457806360c37bd61461011d5780637950c5f814610139575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610c6b565b610164565b60405161008f92919061118a565b60405180910390f35b3480156100a457600080fd5b506100bf60048036038101906100ba9190610c94565b610298565b6040516100cf9493929190611061565b60405180910390f35b6100f260048036038101906100ed9190610cbd565b610390565b005b34801561010057600080fd5b5061011b60048036038101906101169190610d58565b61058f565b005b61013760048036038101906101329190610dcd565b610702565b005b34801561014557600080fd5b5061014e6108b8565b60405161015b9190611168565b60405180910390f35b6002602052806000526040600020600091509050806000018054610187906113e5565b80601f01602080910402602001604051908101604052809291908181526020018280546101b3906113e5565b80156102005780601f106101d557610100808354040283529160200191610200565b820191906000526020600020905b8154815290600101906020018083116101e357829003601f168201915b505050505090806001018054610215906113e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610241906113e5565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b5050505050905082565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600301805461030d906113e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610339906113e5565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381e742a13488600360008b6fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168989896040518763ffffffff1660e01b815260040161044e9594939291906110df565b6000604051808303818588803b15801561046757600080fd5b505af115801561047b573d6000803e3d6000fd5b505050505060005b8484905081101561058657866fffffffffffffffffffffffffffffffff19167f4d1d573b683a134709ff3acb537c8aa57fbb4284f8e201f5cdb5a3fbe61022b38686848181106104fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105119190610c6b565b85858581811061054a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200281019061055c91906111e3565b60405161056b939291906110ad565b60405180910390a2808061057e90611448565b915050610483565b50505050505050565b604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906106879291906109bd565b5060208201518160010190805190602001906106a49291906109bd565b509050503373ffffffffffffffffffffffffffffffffffffffff167f21e927615156d90b4bb131ee82c2149fe2e1bad9298a065589df5dc79dca1413858585856040516106f4949392919061112d565b60405180910390a250505050565b600061070e8383610946565b905060405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481525060036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061084a929190610a43565b509050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2f0a57b5e983f6499f8f043d8869037b0eaa4952c8b222d1de7d4fc36ee95130856040516108ab91906111c1565b60405180910390a3505050565b600180546108c5906113e5565b80601f01602080910402602001604051908101604052809291908181526020018280546108f1906113e5565b801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b505050505081565b60006001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018460405160200161099f93929190611030565b60405160208183030381529060405280519060200120905092915050565b8280546109c9906113e5565b90600052602060002090601f0160209004810192826109eb5760008555610a32565b82601f10610a0457805160ff1916838001178555610a32565b82800160010185558215610a32579182015b82811115610a31578251825591602001919060010190610a16565b5b509050610a3f9190610ac9565b5090565b828054610a4f906113e5565b90600052602060002090601f016020900481019282610a715760008555610ab8565b82601f10610a8a57805160ff1916838001178555610ab8565b82800160010185558215610ab8579182015b82811115610ab7578251825591602001919060010190610a9c565b5b509050610ac59190610ac9565b5090565b5b80821115610ae2576000816000905550600101610aca565b5090565b6000610af9610af48461125f565b61123a565b905082815260208101848484011115610b1157600080fd5b610b1c8482856113a3565b509392505050565b600081359050610b338161152f565b92915050565b60008083601f840112610b4b57600080fd5b8235905067ffffffffffffffff811115610b6457600080fd5b602083019150836020820283011115610b7c57600080fd5b9250929050565b60008083601f840112610b9557600080fd5b8235905067ffffffffffffffff811115610bae57600080fd5b602083019150836020820283011115610bc657600080fd5b9250929050565b600081359050610bdc81611546565b92915050565b60008083601f840112610bf457600080fd5b8235905067ffffffffffffffff811115610c0d57600080fd5b602083019150836001820283011115610c2557600080fd5b9250929050565b600082601f830112610c3d57600080fd5b8135610c4d848260208601610ae6565b91505092915050565b600081359050610c658161155d565b92915050565b600060208284031215610c7d57600080fd5b6000610c8b84828501610b24565b91505092915050565b600060208284031215610ca657600080fd5b6000610cb484828501610bcd565b91505092915050565b60008060008060008060808789031215610cd657600080fd5b6000610ce489828a01610bcd565b9650506020610cf589828a01610c56565b955050604087013567ffffffffffffffff811115610d1257600080fd5b610d1e89828a01610b39565b9450945050606087013567ffffffffffffffff811115610d3d57600080fd5b610d4989828a01610b83565b92509250509295509295509295565b60008060008060408587031215610d6e57600080fd5b600085013567ffffffffffffffff811115610d8857600080fd5b610d9487828801610be2565b9450945050602085013567ffffffffffffffff811115610db357600080fd5b610dbf87828801610be2565b925092505092959194509250565b60008060408385031215610de057600080fd5b600083013567ffffffffffffffff811115610dfa57600080fd5b610e0685828601610c2c565b9250506020610e1785828601610b24565b9150509250929050565b6000610e2d8383610e39565b60208301905092915050565b610e4281611327565b82525050565b610e5181611327565b82525050565b6000610e6383856112d2565b9350610e6e82611290565b8060005b85811015610ea757610e848284611310565b610e8e8882610e21565b9750610e99836112c5565b925050600181019050610e72565b5085925050509392505050565b610ebd81611339565b82525050565b6000610ecf83856112e3565b9350610edc8385846113a3565b610ee58361151e565b840190509392505050565b6000610efb826112af565b610f0581856112e3565b9350610f158185602086016113b2565b610f1e8161151e565b840191505092915050565b6000610f34826112af565b610f3e81856112f4565b9350610f4e8185602086016113b2565b80840191505092915050565b60008154610f67816113e5565b610f7181866112f4565b94506001821660008114610f8c5760018114610f9d57610fd0565b60ff19831686528186019350610fd0565b610fa68561129a565b60005b83811015610fc857815481890152600182019150602081019050610fa9565b838801955050505b50505092915050565b6000610fe4826112ba565b610fee81856112ff565b9350610ffe8185602086016113b2565b6110078161151e565b840191505092915050565b61101b81611385565b82525050565b61102a8161138f565b82525050565b600061103c8286610f5a565b91506110488285610f5a565b91506110548284610f29565b9150819050949350505050565b60006080820190506110766000830187610e48565b6110836020830186610e48565b6110906040830185611012565b81810360608301526110a28184610fd9565b905095945050505050565b60006040820190506110c26000830186610e48565b81810360208301526110d5818486610ec3565b9050949350505050565b60006080820190506110f46000830188610eb4565b6111016020830187610e48565b61110e6040830186611021565b8181036060830152611121818486610e57565b90509695505050505050565b60006040820190508181036000830152611148818688610ec3565b9050818103602083015261115d818486610ec3565b905095945050505050565b600060208201905081810360008301526111828184610ef0565b905092915050565b600060408201905081810360008301526111a48185610ef0565b905081810360208301526111b88184610ef0565b90509392505050565b600060208201905081810360008301526111db8184610fd9565b905092915050565b600080833560016020038436030381126111fc57600080fd5b80840192508235915067ffffffffffffffff82111561121a57600080fd5b60208301925060018202360383131561123257600080fd5b509250929050565b6000611244611255565b90506112508282611417565b919050565b6000604051905090565b600067ffffffffffffffff82111561127a576112796114ef565b5b6112838261151e565b9050602081019050919050565b6000819050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061131f6020840184610b24565b905092915050565b600061133282611365565b9050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156113d05780820151818401526020810190506113b5565b838111156113df576000848401525b50505050565b600060028204905060018216806113fd57607f821691505b60208210811415611411576114106114c0565b5b50919050565b6114208261151e565b810181811067ffffffffffffffff8211171561143f5761143e6114ef565b5b80604052505050565b600061145382611385565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561148657611485611491565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61153881611327565b811461154357600080fd5b50565b61154f81611339565b811461155a57600080fd5b50565b6115668161138f565b811461157157600080fd5b5056fea2646970667358221220924df5ab76a4182959d25486c87d5eb04496597933c933513f0bc37d95fc2b6964736f6c63430008040033";

type AbioticAliceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbioticAliceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbioticAliceManager__factory extends ContractFactory {
  constructor(...args: AbioticAliceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _policyManager: string,
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbioticAliceManager> {
    return super.deploy(
      _policyManager,
      _verifyingKey,
      overrides || {}
    ) as Promise<AbioticAliceManager>;
  }
  getDeployTransaction(
    _policyManager: string,
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _policyManager,
      _verifyingKey,
      overrides || {}
    );
  }
  attach(address: string): AbioticAliceManager {
    return super.attach(address) as AbioticAliceManager;
  }
  connect(signer: Signer): AbioticAliceManager__factory {
    return super.connect(signer) as AbioticAliceManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbioticAliceManagerInterface {
    return new utils.Interface(_abi) as AbioticAliceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbioticAliceManager {
    return new Contract(address, _abi, signerOrProvider) as AbioticAliceManager;
  }
}
