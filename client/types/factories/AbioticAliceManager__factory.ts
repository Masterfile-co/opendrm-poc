/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AbioticAliceManager,
  AbioticAliceManagerInterface,
} from "../AbioticAliceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_verifyingKey",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getVerifyingKey",
    outputs: [
      {
        internalType: "bytes",
        name: "_verifyingKey",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "string",
        name: "bobPk",
        type: "string",
      },
    ],
    name: "requestKfrags",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161078a38038061078a8339818101604052810190610032919061015a565b806000908051906020019061004892919061004f565b50506102f6565b82805461005b90610224565b90600052602060002090601f01602090048101928261007d57600085556100c4565b82601f1061009657805160ff19168380011785556100c4565b828001600101855582156100c4579182015b828111156100c35782518255916020019190600101906100a8565b5b5090506100d191906100d5565b5090565b5b808211156100ee5760008160009055506001016100d6565b5090565b6000610105610100846101c0565b61019b565b90508281526020810184848401111561011d57600080fd5b6101288482856101f1565b509392505050565b600082601f83011261014157600080fd5b81516101518482602086016100f2565b91505092915050565b60006020828403121561016c57600080fd5b600082015167ffffffffffffffff81111561018657600080fd5b61019284828501610130565b91505092915050565b60006101a56101b6565b90506101b18282610256565b919050565b6000604051905090565b600067ffffffffffffffff8211156101db576101da6102b6565b5b6101e4826102e5565b9050602081019050919050565b60005b8381101561020f5780820151818401526020810190506101f4565b8381111561021e576000848401525b50505050565b6000600282049050600182168061023c57607f821691505b602082108114156102505761024f610287565b5b50919050565b61025f826102e5565b810181811067ffffffffffffffff8211171561027e5761027d6102b6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610485806103056000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632336db8d1461003b578063af7f43641461006b575b600080fd5b6100556004803603810190610050919061018b565b610089565b604051610062919061028b565b60405180910390f35b610073610091565b6040516100809190610269565b60405180910390f35b606092915050565b6060600080546100a09061037d565b80601f01602080910402602001604051908101604052809291908181526020018280546100cc9061037d565b80156101195780601f106100ee57610100808354040283529160200191610119565b820191906000526020600020905b8154815290600101906020018083116100fc57829003601f168201915b5050505050905090565b6000610136610131846102d2565b6102ad565b90508281526020810184848401111561014e57600080fd5b61015984828561033b565b509392505050565b600082601f83011261017257600080fd5b8135610182848260208601610123565b91505092915050565b6000806040838503121561019e57600080fd5b600083013567ffffffffffffffff8111156101b857600080fd5b6101c485828601610161565b925050602083013567ffffffffffffffff8111156101e157600080fd5b6101ed85828601610161565b9150509250929050565b600061020282610303565b61020c8185610319565b935061021c81856020860161034a565b6102258161043e565b840191505092915050565b600061023b8261030e565b610245818561032a565b935061025581856020860161034a565b61025e8161043e565b840191505092915050565b6000602082019050818103600083015261028381846101f7565b905092915050565b600060208201905081810360008301526102a58184610230565b905092915050565b60006102b76102c8565b90506102c382826103af565b919050565b6000604051905090565b600067ffffffffffffffff8211156102ed576102ec61040f565b5b6102f68261043e565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561036857808201518184015260208101905061034d565b83811115610377576000848401525b50505050565b6000600282049050600182168061039557607f821691505b602082108114156103a9576103a86103e0565b5b50919050565b6103b88261043e565b810181811067ffffffffffffffff821117156103d7576103d661040f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220db0d4e3b4d2ccf13304dbfbc702cd20dcb85aad1f8de3c5268b058ae8c4fc0e064736f6c63430008040033";

type AbioticAliceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbioticAliceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbioticAliceManager__factory extends ContractFactory {
  constructor(...args: AbioticAliceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbioticAliceManager> {
    return super.deploy(
      _verifyingKey,
      overrides || {}
    ) as Promise<AbioticAliceManager>;
  }
  getDeployTransaction(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifyingKey, overrides || {});
  }
  attach(address: string): AbioticAliceManager {
    return super.attach(address) as AbioticAliceManager;
  }
  connect(signer: Signer): AbioticAliceManager__factory {
    return super.connect(signer) as AbioticAliceManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbioticAliceManagerInterface {
    return new utils.Interface(_abi) as AbioticAliceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbioticAliceManager {
    return new Contract(address, _abi, signerOrProvider) as AbioticAliceManager;
  }
}
