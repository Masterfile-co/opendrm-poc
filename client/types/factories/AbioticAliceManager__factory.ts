/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AbioticAliceManager,
  AbioticAliceManagerInterface,
} from "../AbioticAliceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_verifyingKey",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requestor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentPeriods",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "PolicyRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "verifyingKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "decryptingKey",
        type: "bytes",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_policyId",
        type: "bytes16",
      },
      {
        internalType: "uint64",
        name: "_endTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_valueInWei",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
    ],
    name: "fulfillPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "policyIdToRequestor",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_bobDecryptingKey",
        type: "bytes",
      },
    ],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registry",
    outputs: [
      {
        internalType: "bytes",
        name: "bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "bobDecryptingKey",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_labelSuffix",
        type: "string",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_paymentPeriods",
        type: "uint256",
      },
    ],
    name: "requestPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020f8380380620020f88339818101604052810190620000379190620002a4565b80600090805190602001906200004f92919062000057565b505062000359565b828054620000659062000324565b90600052602060002090601f016020900481019282620000895760008555620000d5565b82601f10620000a457805160ff1916838001178555620000d5565b82800160010185558215620000d5579182015b82811115620000d4578251825591602001919060010190620000b7565b5b509050620000e49190620000e8565b5090565b5b8082111562000103576000816000905550600101620000e9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001708262000125565b810181811067ffffffffffffffff8211171562000192576200019162000136565b5b80604052505050565b6000620001a762000107565b9050620001b5828262000165565b919050565b600067ffffffffffffffff821115620001d857620001d762000136565b5b620001e38262000125565b9050602081019050919050565b60005b8381101562000210578082015181840152602081019050620001f3565b8381111562000220576000848401525b50505050565b60006200023d6200023784620001ba565b6200019b565b9050828152602081018484840111156200025c576200025b62000120565b5b62000269848285620001f0565b509392505050565b600082601f8301126200028957620002886200011b565b5b81516200029b84826020860162000226565b91505092915050565b600060208284031215620002bd57620002bc62000111565b5b600082015167ffffffffffffffff811115620002de57620002dd62000116565b5b620002ec8482850162000271565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033d57607f821691505b602082108103620003535762000352620002f5565b5b50919050565b611d8f80620003696000396000f3fe6080604052600436106100555760003560e01c8063038defd71461005a5780634966d3d514610098578063574267fa146100b45780637950c5f8146100dd57806389b00f6614610108578063fd4f6aae14610145575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906110c7565b610161565b60405161008f92919061118d565b60405180910390f35b6100b260048036038101906100ad91906112f7565b610295565b005b3480156100c057600080fd5b506100db60048036038101906100d691906113d5565b610436565b005b3480156100e957600080fd5b506100f26105a9565b6040516100ff9190611456565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190611478565b610637565b60405161013c91906114c6565b60405180910390f35b61015f600480360381019061015a9190611611565b61066a565b005b6001602052806000526040600020600091509050806000018054610184906116d7565b80601f01602080910402602001604051908101604052809291908181526020018280546101b0906116d7565b80156101fd5780601f106101d2576101008083540402835291602001916101fd565b820191906000526020600020905b8154815290600101906020018083116101e057829003601f168201915b505050505090806001018054610212906116d7565b80601f016020809104026020016040519081016040528092919081815260200182805461023e906116d7565b801561028b5780601f106102605761010080835404028352916020019161028b565b820191906000526020600020905b81548152906001019060200180831161026e57829003601f168201915b5050505050905082565b600060026000876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990611765565b60405180910390fd5b60026000876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634966d3d587878787876040518663ffffffff1660e01b81526004016103fc959493929190611875565b600060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b50505050505050505050565b604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061052e929190610fb2565b50602082015181600101908051906020019061054b929190610fb2565b509050503373ffffffffffffffffffffffffffffffffffffffff167f21e927615156d90b4bb131ee82c2149fe2e1bad9298a065589df5dc79dca14138585858560405161059b94939291906118f0565b60405180910390a250505050565b600080546105b6906116d7565b80601f01602080910402602001604051908101604052809291908181526020018280546105e2906116d7565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b818311156106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a490611977565b60405180910390fd5b60006106c2338761080590919063ffffffff16565b905060006106d08287610843565b90506107106040518060400160405280601681526020017f506f6c6963792072657175657374656420776974683a000000000000000000008152506109b6565b61071981610a4f565b3360026000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb12a98a3e67730a1468aa44a5a62a56898f06148e577b119892d9cb1c6a4a542878787876040516107f494939291906119db565b60405180910390a350505050505050565b606061081082610ae8565b61081946610df3565b8460405160200161082c93929190611a63565b604051602081830303815290604052905092915050565b60006109ae60008054610855906116d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610881906116d7565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b5050505050600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610920906116d7565b80601f016020809104026020016040519081016040528092919081815260200182805461094c906116d7565b80156109995780601f1061096e57610100808354040283529160200191610999565b820191906000526020600020905b81548152906001019060200180831161097c57829003601f168201915b505050505085610f539092919063ffffffff16565b905092915050565b610a4c816040516024016109ca9190611a94565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f89565b50565b610ae581604051602401610a639190611ab6565b6040516020818303038152906040527f665c6104000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f89565b50565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000602a67ffffffffffffffff811115610b5f57610b5e6114e6565b5b6040519080825280601f01601f191660200182016040528015610b915781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610bc957610bc8611ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c2d57610c2c611ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015610de75782600485600c84610c799190611b2f565b60208110610c8a57610c89611ad1565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110610cc957610cc8611ad1565b5b602001015160f81c60f81b82600283610ce29190611b85565b6002610cee9190611b2f565b81518110610cff57610cfe611ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84610d429190611b2f565b60208110610d5357610d52611ad1565b5b1a60f81b1660f81c60ff1681518110610d6f57610d6e611ad1565b5b602001015160f81c60f81b82600283610d889190611b85565b6003610d949190611b2f565b81518110610da557610da4611ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610ddf90611bdf565b915050610c5f565b50809350505050919050565b606060008203610e3a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610f4e565b600082905060005b60008214610e6c578080610e5590611bdf565b915050600a82610e659190611c56565b9150610e42565b60008167ffffffffffffffff811115610e8857610e876114e6565b5b6040519080825280601f01601f191660200182016040528015610eba5781602001600182028036833780820191505090505b5090505b60008514610f4757600182610ed39190611c87565b9150600a85610ee29190611cbb565b6030610eee9190611b2f565b60f81b818381518110610f0457610f03611ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610f409190611c56565b9450610ebe565b8093505050505b919050565b6000828285604051602001610f6a93929190611d28565b6040516020818303038152906040528051906020012090509392505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054610fbe906116d7565b90600052602060002090601f016020900481019282610fe05760008555611027565b82601f10610ff957805160ff1916838001178555611027565b82800160010185558215611027579182015b8281111561102657825182559160200191906001019061100b565b5b5090506110349190611038565b5090565b5b80821115611051576000816000905550600101611039565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109482611069565b9050919050565b6110a481611089565b81146110af57600080fd5b50565b6000813590506110c18161109b565b92915050565b6000602082840312156110dd576110dc61105f565b5b60006110eb848285016110b2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561112e578082015181840152602081019050611113565b8381111561113d576000848401525b50505050565b6000601f19601f8301169050919050565b600061115f826110f4565b61116981856110ff565b9350611179818560208601611110565b61118281611143565b840191505092915050565b600060408201905081810360008301526111a78185611154565b905081810360208301526111bb8184611154565b90509392505050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6111f9816111c4565b811461120457600080fd5b50565b600081359050611216816111f0565b92915050565b600067ffffffffffffffff82169050919050565b6112398161121c565b811461124457600080fd5b50565b60008135905061125681611230565b92915050565b6000819050919050565b61126f8161125c565b811461127a57600080fd5b50565b60008135905061128c81611266565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112b7576112b6611292565b5b8235905067ffffffffffffffff8111156112d4576112d3611297565b5b6020830191508360208202830111156112f0576112ef61129c565b5b9250929050565b6000806000806000608086880312156113135761131261105f565b5b600061132188828901611207565b955050602061133288828901611247565b94505060406113438882890161127d565b935050606086013567ffffffffffffffff81111561136457611363611064565b5b611370888289016112a1565b92509250509295509295909350565b60008083601f84011261139557611394611292565b5b8235905067ffffffffffffffff8111156113b2576113b1611297565b5b6020830191508360018202830111156113ce576113cd61129c565b5b9250929050565b600080600080604085870312156113ef576113ee61105f565b5b600085013567ffffffffffffffff81111561140d5761140c611064565b5b6114198782880161137f565b9450945050602085013567ffffffffffffffff81111561143c5761143b611064565b5b6114488782880161137f565b925092505092959194509250565b600060208201905081810360008301526114708184611154565b905092915050565b60006020828403121561148e5761148d61105f565b5b600061149c84828501611207565b91505092915050565b60006114b082611069565b9050919050565b6114c0816114a5565b82525050565b60006020820190506114db60008301846114b7565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61151e82611143565b810181811067ffffffffffffffff8211171561153d5761153c6114e6565b5b80604052505050565b6000611550611055565b905061155c8282611515565b919050565b600067ffffffffffffffff82111561157c5761157b6114e6565b5b61158582611143565b9050602081019050919050565b82818337600083830152505050565b60006115b46115af84611561565b611546565b9050828152602081018484840111156115d0576115cf6114e1565b5b6115db848285611592565b509392505050565b600082601f8301126115f8576115f7611292565b5b81356116088482602086016115a1565b91505092915050565b600080600080600060a0868803121561162d5761162c61105f565b5b600086013567ffffffffffffffff81111561164b5761164a611064565b5b611657888289016115e3565b9550506020611668888289016110b2565b94505060406116798882890161127d565b935050606061168a8882890161127d565b925050608061169b8882890161127d565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116ef57607f821691505b602082108103611702576117016116a8565b5b50919050565b600082825260208201905092915050565b7f4572726f723a20496e76616c696420706f6c6963794964000000000000000000600082015250565b600061174f601783611708565b915061175a82611719565b602082019050919050565b6000602082019050818103600083015261177e81611742565b9050919050565b61178e816111c4565b82525050565b61179d8161121c565b82525050565b6117ac8161125c565b82525050565b600082825260208201905092915050565b6000819050919050565b6117d681611089565b82525050565b60006117e883836117cd565b60208301905092915050565b600061180360208401846110b2565b905092915050565b6000602082019050919050565b600061182483856117b2565b935061182f826117c3565b8060005b858110156118685761184582846117f4565b61184f88826117dc565b975061185a8361180b565b925050600181019050611833565b5085925050509392505050565b600060808201905061188a6000830188611785565b6118976020830187611794565b6118a460408301866117a3565b81810360608301526118b7818486611818565b90509695505050505050565b60006118cf83856110ff565b93506118dc838584611592565b6118e583611143565b840190509392505050565b6000604082019050818103600083015261190b8186886118c3565b905081810360208301526119208184866118c3565b905095945050505050565b7f4572726f723a205468726573686f6c64203e2073686172657300000000000000600082015250565b6000611961601983611708565b915061196c8261192b565b602082019050919050565b6000602082019050818103600083015261199081611954565b9050919050565b600081519050919050565b60006119ad82611997565b6119b78185611708565b93506119c7818560208601611110565b6119d081611143565b840191505092915050565b60006080820190506119f060008301876117a3565b6119fd60208301866117a3565b611a0a60408301856117a3565b8181036060830152611a1c81846119a2565b905095945050505050565b600081905092915050565b6000611a3d82611997565b611a478185611a27565b9350611a57818560208601611110565b80840191505092915050565b6000611a6f8286611a32565b9150611a7b8285611a32565b9150611a878284611a32565b9150819050949350505050565b60006020820190508181036000830152611aae81846119a2565b905092915050565b6000602082019050611acb6000830184611785565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b3a8261125c565b9150611b458361125c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b7a57611b79611b00565b5b828201905092915050565b6000611b908261125c565b9150611b9b8361125c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611bd457611bd3611b00565b5b828202905092915050565b6000611bea8261125c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c1c57611c1b611b00565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c618261125c565b9150611c6c8361125c565b925082611c7c57611c7b611c27565b5b828204905092915050565b6000611c928261125c565b9150611c9d8361125c565b925082821015611cb057611caf611b00565b5b828203905092915050565b6000611cc68261125c565b9150611cd18361125c565b925082611ce157611ce0611c27565b5b828206905092915050565b600081905092915050565b6000611d02826110f4565b611d0c8185611cec565b9350611d1c818560208601611110565b80840191505092915050565b6000611d348286611cf7565b9150611d408285611cf7565b9150611d4c8284611a32565b915081905094935050505056fea26469706673582212202711662325244b9d477506b267c60d44c806411415ecbf6e8f12dfa785868b4464736f6c634300080d0033";

type AbioticAliceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbioticAliceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbioticAliceManager__factory extends ContractFactory {
  constructor(...args: AbioticAliceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbioticAliceManager> {
    return super.deploy(
      _verifyingKey,
      overrides || {}
    ) as Promise<AbioticAliceManager>;
  }
  getDeployTransaction(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifyingKey, overrides || {});
  }
  attach(address: string): AbioticAliceManager {
    return super.attach(address) as AbioticAliceManager;
  }
  connect(signer: Signer): AbioticAliceManager__factory {
    return super.connect(signer) as AbioticAliceManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbioticAliceManagerInterface {
    return new utils.Interface(_abi) as AbioticAliceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbioticAliceManager {
    return new Contract(address, _abi, signerOrProvider) as AbioticAliceManager;
  }
}
