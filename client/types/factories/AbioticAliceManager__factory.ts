/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AbioticAliceManager,
  AbioticAliceManagerInterface,
} from "../AbioticAliceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_verifyingKey",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requestor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentPeriods",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "PolicyRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "verifyingKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "decryptingKey",
        type: "bytes",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_policyId",
        type: "bytes16",
      },
      {
        internalType: "uint64",
        name: "_endTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_valueInWei",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
    ],
    name: "fulfillPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "policyIdToRequestor",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_bobDecryptingKey",
        type: "bytes",
      },
    ],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registry",
    outputs: [
      {
        internalType: "bytes",
        name: "bobVerifyingKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "bobDecryptingKey",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_labelSuffix",
        type: "string",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_paymentPeriods",
        type: "uint256",
      },
    ],
    name: "requestPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type AbioticAliceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbioticAliceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbioticAliceManager__factory extends ContractFactory {
  constructor(...args: AbioticAliceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbioticAliceManager> {
    return super.deploy(
      _verifyingKey,
      overrides || {}
    ) as Promise<AbioticAliceManager>;
  }
  getDeployTransaction(
    _verifyingKey: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifyingKey, overrides || {});
  }
  attach(address: string): AbioticAliceManager {
    return super.attach(address) as AbioticAliceManager;
  }
  connect(signer: Signer): AbioticAliceManager__factory {
    return super.connect(signer) as AbioticAliceManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbioticAliceManagerInterface {
    return new utils.Interface(_abi) as AbioticAliceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbioticAliceManager {
    return new Contract(address, _abi, signerOrProvider) as AbioticAliceManager;
  }
}
