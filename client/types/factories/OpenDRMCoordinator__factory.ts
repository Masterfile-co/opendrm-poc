/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OpenDRMCoordinator,
  OpenDRMCoordinatorInterface,
} from "../OpenDRMCoordinator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DKGSubscriptionManager",
        name: "_dkgManager",
        type: "address",
      },
      {
        internalType: "contract IPRESubscriptionManager",
        name: "_preManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_odrm721Implementation",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dkgNodes",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_duration",
        type: "uint32",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotChildRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkRegistry",
    outputs: [
      {
        internalType: "string",
        name: "verifyingKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "decryptingKey",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "deployOpenDRM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dkgManager",
    outputs: [
      {
        internalType: "contract DKGSubscriptionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextDeployment",
    outputs: [
      {
        internalType: "address",
        name: "deployment",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "odrm721Implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "preManager",
    outputs: [
      {
        internalType: "contract IPRESubscriptionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_verifyingKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "_decryptingKey",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registry",
    outputs: [
      {
        internalType: "string",
        name: "verifyingKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "decryptingKey",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type OpenDRMCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenDRMCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenDRMCoordinator__factory extends ContractFactory {
  constructor(...args: OpenDRMCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _dkgManager: string,
    _preManager: string,
    _odrm721Implementation: string,
    _dkgNodes: BigNumberish,
    _duration: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<OpenDRMCoordinator> {
    return super.deploy(
      _dkgManager,
      _preManager,
      _odrm721Implementation,
      _dkgNodes,
      _duration,
      overrides || {}
    ) as Promise<OpenDRMCoordinator>;
  }
  getDeployTransaction(
    _dkgManager: string,
    _preManager: string,
    _odrm721Implementation: string,
    _dkgNodes: BigNumberish,
    _duration: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dkgManager,
      _preManager,
      _odrm721Implementation,
      _dkgNodes,
      _duration,
      overrides || {}
    );
  }
  attach(address: string): OpenDRMCoordinator {
    return super.attach(address) as OpenDRMCoordinator;
  }
  connect(signer: Signer): OpenDRMCoordinator__factory {
    return super.connect(signer) as OpenDRMCoordinator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenDRMCoordinatorInterface {
    return new utils.Interface(_abi) as OpenDRMCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenDRMCoordinator {
    return new Contract(address, _abi, signerOrProvider) as OpenDRMCoordinator;
  }
}
