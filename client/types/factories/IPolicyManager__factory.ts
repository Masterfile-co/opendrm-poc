/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPolicyManager,
  IPolicyManagerInterface,
} from "../IPolicyManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_policyId",
        type: "bytes16",
      },
      {
        internalType: "address",
        name: "_policyOwner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_endTimestamp",
        type: "uint64",
      },
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
    ],
    name: "createPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_policyId",
        type: "bytes16",
      },
    ],
    name: "policies",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "sponsor",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "feeRate",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "endTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "reservedSlot1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedSlot2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedSlot3",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedSlot4",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedSlot5",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "node",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "indexOfDowntimePeriods",
                type: "uint256",
              },
              {
                internalType: "uint16",
                name: "lastRefundedPeriod",
                type: "uint16",
              },
            ],
            internalType: "struct IPolicyManager.ArrangementInfo[]",
            name: "arrangements",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPolicyManager.Policy",
        name: "policy",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPolicyManager__factory {
  static readonly abi = _abi;
  static createInterface(): IPolicyManagerInterface {
    return new utils.Interface(_abi) as IPolicyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPolicyManager {
    return new Contract(address, _abi, signerOrProvider) as IPolicyManager;
  }
}
